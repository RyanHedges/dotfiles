syntax on " enable syntax highlighting

set vb " turn on visual bell instead of audible

" ==*== Key Mappings ==*== "
" ==*==================*== "
let mapleader = "," " Remap <Leader> key from \ (backslash) to , (comma)
" remap esc key for exiting insert mode
:imap jk <Esc>

" ==*== Vim Display ==*== "
" ==*=================*== "
set showcmd " Show imcomplete command in last line
set textwidth=78  " Set the word wrap character limit to 78

" --- Line Number --- "
set number " show line numbers
set ruler " Turn on rulers at bottom
set relativenumber " Line numbers relative to the cursor
set numberwidth=5 " Min number of characters to use for the line number column
set cursorline " Underlines the cursors current line in the file
" TEMPORARY -
" https://github.com/neovim/neovim/wiki/FAQ#how-can-i-change-the-cursor-shape-in-the-terminal
let $NVIM_TUI_ENABLE_CURSOR_SHAPE=1 " pipe in insert-mode, and a block in normal-mode

" --- Window Tabs --- "
set showtabline=2 " ALWAYS show tab line at the top

" ==*== Vim Behavior ==*== "
" ==*==================*== "
" --- Tabs --- "
set tabstop=2     " Two spaces for tab
set shiftwidth=2  " Number of spaces to use in each autoindent step
set expandtab     " Use spaces to skip or insert when <BS>ing or <Tab>ing
set softtabstop=2 " Number of spaces to skip or insert when <BS>ing or <Tab>
set shiftround    " Rounds the tab spaces when using > command

" --- Searching --- "
set ignorecase smartcase
" removes highlight when hitting enter after search
nnoremap <CR> :nohlsearch<cr>

" --- Buffers --- "
set switchbuf=useopen " if buffer is open, switches to it

" --- Tab complete --- "
set wildmode=list:longest,list:full " Tab complete show suggestion list, longest first

" --- Moving --- "
set scrolloff=5 "Minimum number of lines of context to keep around cursor

" --- No Arrow Keys --- "
map <Left> :echo "STOP IT!"<cr>
map <Right> :echo "STOP IT!"<cr>
map <Up> :echo "STOP IT!"<cr>
map <Down> :echo "STOP IT!"<cr>

" --- Swp and Backups --- "
" swaps and backups in tmp dir instead of where I am working
set backup
set backupdir=~/.nvim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set directory=~/.nvim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp

" --- Indenting --- "
" Enable file type detection and indetation.
" Use the default filetype settings, so that mail gets 'tw' set to 72,
" 'cindent' is on in C files, etc.
" Also load indent files, to automatically do language-dependent indenting.
" Note: I do not use 'filetype plugin indent on' as it seriously tanks
" performance of opening at least ruby files for editing.
if has("autocmd")
  filetype indent on
endif

" --- Window and Pane managment --- "
" zoom a vim split, <leader>= to re-balance
nnoremap <leader>- :wincmd _<cr>:wincmd \|<cr>
nnoremap <leader>= :wincmd =<cr>

" ==*== Custom Autocmd ==*== "
" ==*====================*== "
" automatically rebalance windows on vim resize
autocmd VimResized * :wincmd =
