#!/usr/bin/env ruby

require 'fileutils'
require 'pathname'

class DotfileLinker
  def initialize(dotfiles_path)
    @dotfiles_path = Pathname.new(dotfiles_path)
    @base_path = @dotfiles_path.expand_path
    @home_dir = Pathname.new("./")
  end

  def link(pointer_file, source_file)
    base_with_source = "#{@base_path}/#{source_file}"
    pointer_full_path = File.expand_path(Pathname.new("#{@home_dir}/#{pointer_file}"))
    if File.exist?(base_with_source)
      if File.symlink?(pointer_full_path)
        puts "#{pointer_full_path} already exists. Skipping link"
      else
        FileUtils.ln_s base_with_source, pointer_full_path, force: true
        puts "Finished linking #{pointer_full_path} to #{base_with_source}"
      end
    else
      puts "File, #{base_with_source}, doesn't exist"
    end
  end
end

linker = DotfileLinker.new("~/.dotfiles")

linker.link(".gitconfig", "git/gitconfig")
linker.link(".gitignore", "git/gitignore")
linker.link(".zshrc", "zsh/zshrc")
linker.link(".vim", "vim")
config_dir = File.expand_path("~/.config")
FileUtils.mkdir_p(config_dir)
linker.link(".config/git-ps", "git-ps")
linker.link(".config/zed", "zed")
